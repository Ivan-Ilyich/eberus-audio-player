{"version":3,"sources":["tracks.json","node_modules/uuid/lib/rng-browser.js","node_modules/uuid/lib/bytesToUuid.js","node_modules/uuid/v1.js","node_modules/uuid/v4.js","node_modules/uuid/index.js","dashboard.js"],"names":["module","exports","trackContainerTemplate","document","querySelector","trackListContainer","IMAGE_URL","MP3_URL","addTrackId","tracks","map","track","id","tracksList","setupTrackList","forEach","renderTracks","trackContainer","content","cloneNode","container","dataset","trackId","title","innerText","artist","image","src","thumbnail","appendChild"],"mappings":"AKAA,AHAA,ADAA,AEAA,ACAA,AJAAA,MAAM,CAACC,OAAP,GAAiB,CACf;AKAF,AHAA,ADAA,AEAA,ACAA,AJCI,cAAY,oBADd;AKCF,AHAA,ADAA,AEAA,ACAA,AJCI,eAAa,oBAFf;AKEF,AHAA,ADAA,AEAA,ACAA,AJCI,YAAU,oCAHZ;AKGF,AHAA,ADAA,AEAA,ACAA,AJCI,WAAS;AKAb,AHAA,ADAA,AEAA,ACAA,AJJE,CADe,EAOf;AKDF,AHAA,ADAA,AEAA,ACAA,AJEI,cAAY,mBADd;AMPF,ADOA,AHAA,ADAA,AEAA,ACAA,AJEI,eAAa,mBAFf;AKCF,AHAA,ADAA,AEAA,ACAA,AJEI,YAAU,gBAHZ;AMNF,AJQA,ADAA,AEAA,ACAA,AJEI,WAAS;AEDb,ADAA,AEAA,ACAA,AJHE,CAPe,EAaf;AEFF,ADAA,AEAA,ACAA,AJGI,cAAY,WADd;AEDF,ADAA,AEAA,ACAA,AJGI,eAAa,WAFf;AEAF,ADAA,AEAA,ACAA,AJGI,YAAU,mBAHZ;AECF,ADAA,AEAA,ACAA,AJGI,WAAS;AEFb,ADAA,AEAA,ACAA,AJFE,CAbe,EAmBf;AEHF,ADAA,AEAA,ACAA,AJII,cAAY,mBADd;AEFF,ADAA,AEAA,ACAA,AJII,eAAa,mBAFf;AEDF,ADAA,AEAA,ACAA,AJII,YAAU,gBAHZ;AMhBF,AJgBA,ADAA,AEAA,ACAA,AJII,IMpBEC,ONoBO,eMpBe,GAAGC,QAAQ,CAACC,aAAT,CAC7B,6BAD6B,CAA/B;AAGA,AJcA,ADAA,AEAA,ACAA,AJDE,CAnBe,EAyBf,CMnBIC,kBAAkB,GAAGF,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,CAA3B;AAEA,AJaA,ADAA,AEAA,ACAA,AJKI,IMlBEE,SAAS,CNkBC,EMlBE,QNiBhB,aMjBF;AACA,AJaA,ADAA,AEAA,ACAA,AJKI,IMlBEC,OAAO,GAAG,CNkBC,UMlBjB,ANgBE;AEFF,ADAA,AEAA,ACAA,AJKI,YAAU,eAHZ;AMdF,AJaA,ADAA,AEAA,ACAA,AJKI,IMlBEC,ONkBO,GMlBG,GAAG,SAAbA,UAAa,CAAAC,MAAM;AAAA,AJczB,ADAA,AEAA,ACAA,AJAE,CAzBe,EA+Bf,MMnBAA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK,EAAI;AAClB,AJaJ,ADAA,AEAA,ACAA,AJMI,cAAY,iBADd,YMjBOA,KADL;AAEEC,ALYN,AEAA,ACAA,AJMI,MMlBEA,EAAE,EAAE,KNkBO,iBAFf;AMlBE,ALeJ,AEAA,ACAA,AJMI,YAAU,kBAHZ;AMdC,ALYH,AEAA,ACAA,AJMI,GMvBF,CADuB,ONwBZ;AMxBY,ALmBzB,AEAA,AHCE,CMpBF,ANXiB,EAqCf;ACNF,AEAA,AHOI,cAAY,eADd;AMlBF,ALaA,AEAA,AHOI,IMpBEH,MAAM,GAAGD,ENoBE,QMpBQ,CAACK,MNkBxB,SMlBuB,CAAzB;ALcA,AEAA,AHOI,YAAU,WAHZ;ACHF,AEAA,AHOI,WAAS;AMpBN,AHcP,AHEE,CArCe,EA2Cf,CMtBWC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClCL,AHcF,AHQI,EMtBFA,MAAM,CAACM,KNsBO,EMtBd,CAAeC,MNqBf,MMrBA;AACD,AHcD,AHQI,CMxBG,cNwBU,SAFf;AGLF,AHQI,YAAU,cAHZ;AGJF,AHQI,WAAS;AGPb,AHGE,CA3Ce,EAiDf;AMxBF,AHgBA,AHSI,IMzBEA,UNyBU,EMzBE,GAAG,SAAfA,INwBJ,QMxBmB,CAAAL,KAAK,EAAI;AAC5B,AHgBF,AHSI,eAAa,kBAFf;AMtBA,AHgBF,AHSI,MMzBIM,MNyBM,QMzBQ,GAAGf,KNsBvB,iBMtB6C,CAACgB,OAAvB,CAA+BC,SAA/B,CAAyC,IAAzC,CAAvB;AAEA,AHeF,AHSI,MMxBIC,KNwBK,IMxBI,GAAGH,cAAc,CAACb,aAAf,CAA6B,wBAA7B,CAAlB;AACAgB,AHeF,AHIE,CAjDe,CM8BfA,CNyBA,QMzBS,CAACC,OAAV,CAAkBC,OAAlB,GAA4BX,KAAK,CAACC,EAAlC;AAEA,AHcF,AHUI,MMxBIW,KAAK,GAAGN,ANwBA,cMxBc,CAACb,CNuB7B,YMvBc,CAA6B,oBAA7B,CAAd;AACAmB,AHcF,AHUI,EMxBFA,KAAK,CAACC,ONwBS,EMxBf,aAAqBb,CNsBrB,IMtB0B,CAACY,KAA3B,gBAAsCZ,KAAK,CAACc,MAA5C;AAEA,AHaF,AHUI,MMvBIC,KAAK,CNuBC,EMvBET,cAAc,ANoB5B,CMpB6Bb,aAAf,CAA6B,kBAA7B,CAAd;AACAsB,AHaF,AHUI,EMvBFA,KAAK,CAACC,GAAN,ANuBW,aMvBIrB,SAAf,cAA4BK,KAAK,CAACiB,SAAlC;AAEAvB,AHYF,AHKE,CAvDe,CMsCfA,CNuBA,iBMvBkB,CAACwB,WAAnB,CAA+BZ,cAA/B;AACD,AHYD,AHWI,CMrCJ,aNqCgB,cADd;AGTF,AHWI,eAAa,cAFf;AMpBFH,AHYA,AHWI,YAAU,EMvBA,SNoBZ;AGPF,AHWI,WAAS;AGVb,AHME,CA7De,EAmEf;AGXF,AHYI,cAAY,aADd;AGVF,AHYI,eAAa,aAFf;AGTF,AHYI,YAAU,wBAHZ;AGRF,AHYI,WAAS;AGXb,AHOE,CAnEe,CAAjB;AG6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dashboard.2deb91d7.js","sourceRoot":"..","sourcesContent":["module.exports = [\n  {\n    \"filename\": \"acousticbreeze.mp3\",\n    \"thumbnail\": \"acousticbreeze.jpg\",\n    \"artist\": \"One Zillion Collapsing Iced Koalas\",\n    \"title\": \"Acoustic breeze\"\n  },\n  {\n    \"filename\": \"anewbeginning.mp3\",\n    \"thumbnail\": \"anewbeginning.jpg\",\n    \"artist\": \"Puddle of Rock\",\n    \"title\": \"A new beginning\"\n  },\n  {\n    \"filename\": \"buddy.mp3\",\n    \"thumbnail\": \"buddy.jpg\",\n    \"artist\": \"The Quiet Goblins\",\n    \"title\": \"Buddy\"\n  },\n  {\n    \"filename\": \"creativeminds.mp3\",\n    \"thumbnail\": \"creativeminds.jpg\",\n    \"artist\": \"New York Panic\",\n    \"title\": \"Creative Minds\"\n  },\n  {\n    \"filename\": \"cute.mp3\",\n    \"thumbnail\": \"cute.jpg\",\n    \"artist\": \"Izabel Monroe\",\n    \"title\": \"Cute\"\n  },\n  {\n    \"filename\": \"goinghigher.mp3\",\n    \"thumbnail\": \"goinghigher.jpg\",\n    \"artist\": \"Christina Ibarra\",\n    \"title\": \"Going Higher\"\n  },\n  {\n    \"filename\": \"happyrock.mp3\",\n    \"thumbnail\": \"happyrock.jpg\",\n    \"artist\": \"Leia Knox\",\n    \"title\": \"Happy Rock\"\n  },\n  {\n    \"filename\": \"hey.mp3\",\n    \"thumbnail\": \"hey.jpg\",\n    \"artist\": \"Isra Traynor\",\n    \"title\": \"Hey\"\n  },\n  {\n    \"filename\": \"jazzyfrenchy.mp3\",\n    \"thumbnail\": \"jazzyfrenchy.jpg\",\n    \"artist\": \"Au Revior Ears\",\n    \"title\": \"Jazzy Frenchy\"\n  },\n  {\n    \"filename\": \"littleidea.mp3\",\n    \"thumbnail\": \"littleidea.jpg\",\n    \"artist\": \"Lynette Wonder\",\n    \"title\": \"Little Idea\"\n  },\n  {\n    \"filename\": \"memories.mp3\",\n    \"thumbnail\": \"memories.jpg\",\n    \"artist\": \"Megachord\",\n    \"title\": \"Memories\"\n  },\n  {\n    \"filename\": \"ukulele.mp3\",\n    \"thumbnail\": \"ukulele.jpg\",\n    \"artist\": \"Rage Against the Chord\",\n    \"title\": \"Ukulele\"\n  }\n]\n;","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","import tracksList from \"./tracks.json\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst trackContainerTemplate = document.querySelector(\n  \"#track__container__template\"\n);\nconst trackListContainer = document.querySelector(\"[data-tracks-container]\");\n\nconst IMAGE_URL = \"./tracks/thumbnails\";\nconst MP3_URL = \"./tracks/\";\n\nconst addTrackId = tracks =>\n  tracks.map(track => {\n    return {\n      ...track,\n      id: uuidv4(),\n    };\n  });\n\nconst tracks = addTrackId(tracksList);\n\nexport const setupTrackList = () => {\n  tracks.forEach(renderTracks);\n};\n\nconst renderTracks = track => {\n  // console.log(track);\n  const trackContainer = trackContainerTemplate.content.cloneNode(true);\n\n  const container = trackContainer.querySelector(\"[data-track-container]\");\n  container.dataset.trackId = track.id;\n\n  const title = trackContainer.querySelector(\"[data-track-title]\");\n  title.innerText = `${track.title} - ${track.artist}`;\n\n  const image = trackContainer.querySelector(\"[data-track-img]\");\n  image.src = `${IMAGE_URL}/${track.thumbnail}`;\n\n  trackListContainer.appendChild(trackContainer);\n};\n\nsetupTrackList();\nexport { tracks };\n"]}